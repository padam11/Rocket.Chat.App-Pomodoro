{"version":3,"sources":["src/server/misc/Utilities.ts"],"names":[],"mappings":"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","file":"Utilities.js","sourcesContent":["import cloneDeep = require('lodash.clonedeep');\nimport * as path from 'path';\nimport * as timers from 'timers';\nimport * as vm from 'vm';\n\nimport { AllowedInternalModules, requireNativeModule } from '../compiler/modules';\n\nexport class Utilities {\n    public static deepClone<T>(item: T): T {\n        return cloneDeep(item);\n    }\n\n    public static deepFreeze<T>(item: any): T {\n        Object.freeze(item);\n\n        Object.getOwnPropertyNames(item).forEach((prop: string) => {\n            // tslint:disable-next-line:max-line-length\n            if (item.hasOwnProperty(prop) && item[prop] !== null && (typeof item[prop] === 'object' || typeof item[prop] === 'function') && !Object.isFrozen(item[prop])) {\n                Utilities.deepFreeze(item[prop]);\n            }\n        });\n\n        return item;\n    }\n\n    public static deepCloneAndFreeze<T>(item: T): T {\n        return Utilities.deepFreeze(Utilities.deepClone(item));\n    }\n\n    /**\n     * Keeps compatibility with apps compiled and stored in the database\n     * with previous Apps-Engine versions\n     */\n    public static transformFallbackModuleForCustomRequire(moduleName: string): string {\n        return path.normalize(moduleName).replace(/\\.\\.?\\//g, '').replace(/^\\//, '') + '.ts';\n    }\n\n    public static transformModuleForCustomRequire(moduleName: string): string {\n        return path.normalize(moduleName).replace(/\\.\\.?\\//g, '').replace(/^\\//, '') + '.js';\n    }\n\n    public static allowedInternalModuleRequire(moduleName: string): moduleName is AllowedInternalModules {\n        return moduleName in AllowedInternalModules;\n    }\n\n    public static buildCustomRequire(files: { [s: string]: string }, appId: string, currentPath: string = '.'): (mod: string) => {} {\n        return function _requirer(mod: string): any {\n            // Keep compatibility with apps importing apps-ts-definition\n            if (mod.startsWith('@rocket.chat/apps-ts-definition/')) {\n                mod = path.normalize(mod);\n                mod = mod.replace('@rocket.chat/apps-ts-definition/', '../../definition/');\n                return require(mod);\n            }\n\n            if (mod.startsWith('@rocket.chat/apps-engine/definition/')) {\n                mod = path.normalize(mod);\n                mod = mod.replace('@rocket.chat/apps-engine/definition/', '../../definition/');\n                return require(mod);\n            }\n\n            if (Utilities.allowedInternalModuleRequire(mod)) {\n                return requireNativeModule(mod, appId);\n            }\n\n            if (currentPath !== '.') {\n                mod = path.join(currentPath, mod);\n            }\n\n            const transformedModule = Utilities.transformModuleForCustomRequire(mod);\n            const fallbackModule = Utilities.transformFallbackModuleForCustomRequire(mod);\n\n            const filename = files[transformedModule] ? transformedModule : files[fallbackModule] ? fallbackModule : undefined;\n            let fileExport;\n\n            if (filename) {\n                fileExport = {};\n\n                const context = vm.createContext({\n                    require: Utilities.buildCustomRequire(files, appId, path.dirname(filename) + '/'),\n                    console,\n                    exports: fileExport,\n                    process: {},\n                });\n\n                vm.runInContext(files[filename], context);\n            }\n\n            return fileExport;\n        };\n    }\n\n    public static buildDefaultAppContext(injectables: unknown): vm.Context {\n        const defaultContextProperties = {\n            ...timers,\n            Buffer,\n        };\n\n        return vm.createContext(Object.assign({}, defaultContextProperties, injectables));\n    }\n\n    public static omit(object: { [key: string]: any }, keys: Array<string>) {\n        const cloned = this.deepClone(object);\n        for (const key of keys) {\n            delete cloned[key];\n        }\n        return cloned;\n    }\n}\n"]}